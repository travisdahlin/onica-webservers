AWSTemplateFormatVersion: "2010-09-09"
Description: "CI/CD pipeline for webservers and applicaiton"

Resources:
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CodePipelineServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: codepipline-service-policy
      Roles:
        - Ref: CodePipelineServiceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
              - s3:PutObject
            Resource:
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
            Resource: "*"
            Effect: Allow
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
            Resource: "*"
  CloudFormationProvisionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CloudFormationProvisionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cloudformation-provision-policy
      Roles:
        - Ref: CloudFormationProvisionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "*"
            Resource: "*"
            Effect: Allow

  OnicaCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: onica

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket

  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CodePipelineServiceRole
          - Arn
      ArtifactStore:
        Location:
          Ref: ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName:
                  Fn::GetAtt:
                    - OnicaCodeCommit
                    - Name
                BranchName: master
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: webservers-stack
                TemplateConfiguration: SourceOutput::templates/webservers-configuration.json
                TemplatePath: SourceOutput::templates/webservers.yml
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt:
                    - CloudFormationProvisionRole
                    - Arn
              RunOrder: 1

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: codepipeline-notifications
      Subscription:
        - Protocol: email
          Endpoint: trdahlin@gmail.com
